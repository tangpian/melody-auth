import{_ as n,c as s,a,o as l}from"./app-Bvr6C8Qu.js";const i={};function t(r,e){return l(),s("div",null,e[0]||(e[0]=[a(`<h1 id="auth-server-setup" tabindex="-1"><a class="header-anchor" href="#auth-server-setup"><span>Auth Server Setup</span></a></h1><p>This guide will walk you through setting up Melody Auth in both Cloudflare (remote/production or local/development) and Node.js environments.</p><h2 id="cloudflare-remote-production-environment" tabindex="-1"><a class="header-anchor" href="#cloudflare-remote-production-environment"><span>Cloudflare Remote/Production Environment</span></a></h2><h3 id="_1-cloudflare-account-setup" tabindex="-1"><a class="header-anchor" href="#_1-cloudflare-account-setup"><span>1. Cloudflare Account Setup</span></a></h3><ol><li>Sign up for a Cloudflare account if you don&#39;t have one already.</li><li>Install Wrangler CLI and Authenticate:<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">npx wrangler</span>
<span class="line">wrangler login</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_2-cloudflare-resource-creation" tabindex="-1"><a class="header-anchor" href="#_2-cloudflare-resource-creation"><span>2. Cloudflare Resource Creation</span></a></h3><p>In your Cloudflare dashboard:</p><ol><li>Create a Worker: <ul><li>Go to &quot;Compute(Workers)&quot; -&gt; &quot;Workers &amp; Pages&quot; -&gt; Click &quot;Create&quot; button</li><li>Name the worker &quot;melody-auth&quot;</li><li>After creation, open the worker -&gt; &quot;Settings&quot; -&gt; &quot;Variables and Secrets&quot;</li><li>Add a variable named &quot;AUTH_SERVER_URL&quot; with the value set to your worker&#39;s URL (e.g., https://melody-auth.[your-account-name].workers.dev)</li></ul></li><li>Create a D1 Database: <ul><li>Go to &quot;Storage &amp; Databases&quot; -&gt; &quot;D1 SQL Database&quot;</li><li>Click &quot;Create&quot; button</li></ul></li><li>Create a KV Storage: <ul><li>Go to &quot;Storage &amp; Databases&quot; -&gt; &quot;KV&quot;</li><li>Click &quot;Create&quot; button</li></ul></li></ol><h3 id="_3-cloudflare-worker-secrets-setup" tabindex="-1"><a class="header-anchor" href="#_3-cloudflare-worker-secrets-setup"><span>3. Cloudflare Worker Secrets Setup</span></a></h3><p>In your Cloudflare dashboard:</p><ol><li>Go to &quot;Compute(Workers)&quot; -&gt; &quot;Workers &amp; Pages&quot;</li><li>Select your &quot;melody-auth&quot; worker</li><li>Click on &quot;Settings&quot; -&gt; &quot;Variables and Secrets&quot;</li><li>Include the required environment variables for any email, SMS, or social sign-in providers you plan to use. <ul><li><a href="https://auth.valuemelody.com/email-provider-setup.html" target="_blank" rel="noopener noreferrer">Email Provider Setup</a></li><li><a href="https://auth.valuemelody.com/sms-provider-setup.html" target="_blank" rel="noopener noreferrer">SMS Provider Setup</a></li><li><a href="https://auth.valuemelody.com/social-sign-in-provider-setup.html" target="_blank" rel="noopener noreferrer">Social Sign-In Provider Setup</a></li></ul></li></ol><h3 id="_4-project-setup" tabindex="-1"><a class="header-anchor" href="#_4-project-setup"><span>4. Project Setup</span></a></h3><ol><li><p>Clone the Repository:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git clone git@github.com:ValueMelody/melody-auth.git</span>
<span class="line">cd melody-auth</span>
<span class="line">npm install</span>
<span class="line">npm run build</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Configure <code>server/wrangler.toml</code>: Replace the KV and D1 IDs with the resources you created:</p><div class="language-toml line-numbers-mode" data-highlighter="prismjs" data-ext="toml" data-title="toml"><pre><code><span class="line"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">kv_namespaces</span><span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">binding</span> <span class="token punctuation">=</span> <span class="token string">&quot;KV&quot;</span></span>
<span class="line"><span class="token key property">id</span> <span class="token punctuation">=</span> <span class="token string">&quot;your_kv_namespace_id&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">d1_databases</span><span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token key property">binding</span> <span class="token punctuation">=</span> <span class="token string">&quot;DB&quot;</span></span>
<span class="line"><span class="token key property">database_name</span> <span class="token punctuation">=</span> <span class="token string">&quot;melody-auth&quot;</span></span>
<span class="line"><span class="token key property">database_id</span> <span class="token punctuation">=</span> <span class="token string">&quot;your_d1_database_id&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_5-initial-deployment" tabindex="-1"><a class="header-anchor" href="#_5-initial-deployment"><span>5. Initial Deployment</span></a></h3><p>Run the following commands</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">cd server</span>
<span class="line">npm run prod:secret:generate</span>
<span class="line">npm run prod:migration:apply</span>
<span class="line">npm run prod:deploy</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Now you are all set</strong>, you can verify your deployment by accessing: <code>[your_worker_url]/.well-known/openid-configuration</code></p><h3 id="_6-future-deployments" tabindex="-1"><a class="header-anchor" href="#_6-future-deployments"><span>6.Future Deployments</span></a></h3><p>To pull the latest code and redeploy:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git pull origin main</span>
<span class="line">cd server</span>
<span class="line">npm run prod:migration:apply # If there are new migrations</span>
<span class="line">npm run prod:deploy</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cloudflare-local-development-environment" tabindex="-1"><a class="header-anchor" href="#cloudflare-local-development-environment"><span>Cloudflare Local/Development Environment</span></a></h2><p>To set up your local development environment, follow these steps:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git clone git@github.com:ValueMelody/melody-auth.git</span>
<span class="line">cd melody-auth</span>
<span class="line">npm install</span>
<span class="line">npm run build</span>
<span class="line"></span>
<span class="line">cd server</span>
<span class="line">cp .dev.vars.example .dev.vars</span>
<span class="line"># Include the required environment variables for any email, SMS, or social sign-in providers you plan to use.</span>
<span class="line"></span>
<span class="line">npm run dev:secret:generate</span>
<span class="line">npm run dev:migration:apply</span>
<span class="line">npm run dev:start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="node-environment-setup" tabindex="-1"><a class="header-anchor" href="#node-environment-setup"><span>Node Environment Setup</span></a></h2><h3 id="_1-node-postgres-and-redis-setup" tabindex="-1"><a class="header-anchor" href="#_1-node-postgres-and-redis-setup"><span>1. Node, Postgres and Redis setup</span></a></h3><p>Begin by setting up your PostgreSQL and Redis servers, and ensure you have the connection strings ready for integration. Please also ensure you are using <b>Node.js version 20.05 or higher</b> for compatibility.</p><h3 id="_2-project-setup" tabindex="-1"><a class="header-anchor" href="#_2-project-setup"><span>2. Project setup</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git clone git@github.com:ValueMelody/melody-auth.git</span>
<span class="line">cd melody-auth</span>
<span class="line">npm install</span>
<span class="line">npm run build</span>
<span class="line"></span>
<span class="line">cd server</span>
<span class="line">cp .dev.vars.example .dev.vars</span>
<span class="line"># Fill in PostgreSQL &amp; Redis connection strings</span>
<span class="line"># Include the required environment variables for any email, SMS, or social sign-in providers you plan to use.</span>
<span class="line"></span>
<span class="line">npm run node:secret:generate</span>
<span class="line">npm run node:migration:apply</span>
<span class="line">npm run node:dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This starts the server in development mode using Node.js, connected to your local or remote databases.</p><h3 id="_3-production-build" tabindex="-1"><a class="header-anchor" href="#_3-production-build"><span>3. Production Build</span></a></h3><p>To build and run in production:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">cd server</span>
<span class="line">npm run node:build</span>
<span class="line">npm run node:start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-future-deployments" tabindex="-1"><a class="header-anchor" href="#_4-future-deployments"><span>4.Future Deployments</span></a></h3><p>To pull the latest code and redeploy:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">git pull origin main</span>
<span class="line">cd server</span>
<span class="line">npm run node:migration:apply # If there are new migrations</span>
<span class="line">npm run node:build</span>
<span class="line">npm run node:start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35)]))}const d=n(i,[["render",t],["__file","auth-server-setup.html.vue"]]),p=JSON.parse('{"path":"/auth-server-setup.html","title":"Auth Server Setup","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Cloudflare Remote/Production Environment","slug":"cloudflare-remote-production-environment","link":"#cloudflare-remote-production-environment","children":[{"level":3,"title":"1. Cloudflare Account Setup","slug":"_1-cloudflare-account-setup","link":"#_1-cloudflare-account-setup","children":[]},{"level":3,"title":"2. Cloudflare Resource Creation","slug":"_2-cloudflare-resource-creation","link":"#_2-cloudflare-resource-creation","children":[]},{"level":3,"title":"3. Cloudflare Worker Secrets Setup","slug":"_3-cloudflare-worker-secrets-setup","link":"#_3-cloudflare-worker-secrets-setup","children":[]},{"level":3,"title":"4. Project Setup","slug":"_4-project-setup","link":"#_4-project-setup","children":[]},{"level":3,"title":"5. Initial Deployment","slug":"_5-initial-deployment","link":"#_5-initial-deployment","children":[]},{"level":3,"title":"6.Future Deployments","slug":"_6-future-deployments","link":"#_6-future-deployments","children":[]}]},{"level":2,"title":"Cloudflare Local/Development Environment","slug":"cloudflare-local-development-environment","link":"#cloudflare-local-development-environment","children":[]},{"level":2,"title":"Node Environment Setup","slug":"node-environment-setup","link":"#node-environment-setup","children":[{"level":3,"title":"1. Node, Postgres and Redis setup","slug":"_1-node-postgres-and-redis-setup","link":"#_1-node-postgres-and-redis-setup","children":[]},{"level":3,"title":"2. Project setup","slug":"_2-project-setup","link":"#_2-project-setup","children":[]},{"level":3,"title":"3. Production Build","slug":"_3-production-build","link":"#_3-production-build","children":[]},{"level":3,"title":"4.Future Deployments","slug":"_4-future-deployments","link":"#_4-future-deployments","children":[]}]}],"git":{"updatedTime":1739055609000,"contributors":[{"name":"Baozier","username":"Baozier","email":"byn9826@gmail.com","commits":1,"url":"https://github.com/Baozier"}]},"filePathRelative":"auth-server-setup.md"}');export{d as comp,p as data};
